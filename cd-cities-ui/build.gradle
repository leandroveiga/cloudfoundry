buildscript {
	ext {
		springBootVersion = '1.2.1.RELEASE'
		springCloudVersion = '1.1.1.RELEASE'
		springDataVersion = '1.9.2.RELEASE'
		feignVersion = '7.1.0'
		thymeleafVersion = '2.1.4.RELEASE'
	}
	repositories { mavenCentral() }
	dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
	baseName = 'cities-ui'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories { mavenCentral() }


dependencies {

	// Spring
	compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
	compile "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
	compile "org.springframework.data:spring-data-commons:${springDataVersion}"
	compile("org.springframework.cloud:spring-cloud-spring-service-connector:${springCloudVersion}")
	compile "org.springframework.hateoas:spring-hateoas:0.16.0.RELEASE"
	compile "org.springframework.cloud:spring-cloud-cloudfoundry-connector:${springCloudVersion}"
	compile "org.springframework.cloud:spring-cloud-localconfig-connector:${springCloudVersion}"

	//feign
	compile "com.netflix.feign:feign-core:${feignVersion}"
	compile "com.netflix.feign:feign-jackson:${feignVersion}"

	//thymeleaf
	compile "org.thymeleaf:thymeleaf:${thymeleafVersion}"
	compile "org.thymeleaf:thymeleaf-spring4:${thymeleafVersion}"
	compile "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"
	
	testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
}

allprojects {
	apply from: "$rootDir/gradle/versioning.gradle"
}

eclipse {
	classpath {
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
	}
}

